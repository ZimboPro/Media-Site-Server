/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.7.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export type ProfileConditionValue = 'AudioChannels' | 'AudioBitrate' | 'AudioProfile' | 'Width' | 'Height' | 'Has64BitOffsets' | 'PacketLength' | 'VideoBitDepth' | 'VideoBitrate' | 'VideoFramerate' | 'VideoLevel' | 'VideoProfile' | 'VideoTimestamp' | 'IsAnamorphic' | 'RefFrames' | 'NumAudioStreams' | 'NumVideoStreams' | 'IsSecondaryAudio' | 'VideoCodecTag' | 'IsAvc' | 'IsInterlaced' | 'AudioSampleRate' | 'AudioBitDepth';

export const ProfileConditionValue = {
    AudioChannels: 'AudioChannels' as ProfileConditionValue,
    AudioBitrate: 'AudioBitrate' as ProfileConditionValue,
    AudioProfile: 'AudioProfile' as ProfileConditionValue,
    Width: 'Width' as ProfileConditionValue,
    Height: 'Height' as ProfileConditionValue,
    Has64BitOffsets: 'Has64BitOffsets' as ProfileConditionValue,
    PacketLength: 'PacketLength' as ProfileConditionValue,
    VideoBitDepth: 'VideoBitDepth' as ProfileConditionValue,
    VideoBitrate: 'VideoBitrate' as ProfileConditionValue,
    VideoFramerate: 'VideoFramerate' as ProfileConditionValue,
    VideoLevel: 'VideoLevel' as ProfileConditionValue,
    VideoProfile: 'VideoProfile' as ProfileConditionValue,
    VideoTimestamp: 'VideoTimestamp' as ProfileConditionValue,
    IsAnamorphic: 'IsAnamorphic' as ProfileConditionValue,
    RefFrames: 'RefFrames' as ProfileConditionValue,
    NumAudioStreams: 'NumAudioStreams' as ProfileConditionValue,
    NumVideoStreams: 'NumVideoStreams' as ProfileConditionValue,
    IsSecondaryAudio: 'IsSecondaryAudio' as ProfileConditionValue,
    VideoCodecTag: 'VideoCodecTag' as ProfileConditionValue,
    IsAvc: 'IsAvc' as ProfileConditionValue,
    IsInterlaced: 'IsInterlaced' as ProfileConditionValue,
    AudioSampleRate: 'AudioSampleRate' as ProfileConditionValue,
    AudioBitDepth: 'AudioBitDepth' as ProfileConditionValue
};

